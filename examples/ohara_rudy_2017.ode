#Parameters
time_new = time;
rad = 1.100000000000000e-03f;
L = 1.000000000000000e-02f;
i_Stim_Amplitude = -8.000000000000000e+01f;
i_Stim_Start = 1.000000000000000e+01f;
i_Stim_End = 1.000000000000000e+17f;
i_Stim_Period = 1.000000000000000e+03f;
i_Stim_PulseDuration = 5.000000000000000e-01f;
F = 9.648500000000000e+04f;
R = 8.314000000000000e+03f;
T = 3.100000000000000e+02f;
ICaL = 0.000000000000000e+00f;
ICaNa = 0.000000000000000e+00f;
ICaK = 0.000000000000000e+00f;
CaMKo = 5.000000000000000e-02f;
KmCaM = 1.500000000000000e-03f;
aCaMK = 5.000000000000000e-02f;
bCaMK = 6.800000000000000e-04f;
cmdnmax_b = 5.000000000000000e-02f;
celltype = 0.000000000000000e+00f;
cm = 1.000000000000000e+00f;
kmcmdn = 2.380000000000000e-03f;
trpnmax = 7.000000000000001e-02f;
kmtrpn = 5.000000000000000e-04f;
BSRmax = 4.700000000000000e-02f;
KmBSR = 8.700000000000000e-04f;
BSLmax = 1.124000000000000e+00f;
KmBSL = 8.699999999999999e-03f;
csqnmax = 1.000000000000000e+01f;
kmcsqn = 8.000000000000000e-01f;
nao = 1.400000000000000e+02f;
ko = 5.400000000000000e+00f;
PKNa = 1.833000000000000e-02f;
mssV1 = 3.957000000000000e+01f;
mssV2 = 9.871000000000000e+00f;
mtD1 = 6.765000000000000e+00f;
mtV1 = 1.164000000000000e+01f;
mtV2 = 3.477000000000000e+01f;
mtD2 = 8.552000000000000e+00f;
mtV3 = 7.742000000000000e+01f;
mtV4 = 5.955000000000000e+00f;
hssV1 = 8.290000000000001e+01f;
shift_INa_inact = 0.000000000000000e+00f;
hssV2 = 6.086000000000000e+00f;
Ahf = 9.900000000000000e-01f;
KmCaMK = 1.500000000000000e-01f;
GNa = 7.500000000000000e+01f;
thL = 2.000000000000000e+02f;
GNaL_b = 1.995749999999998e-02f;
Gto_b = 2.000000000000000e-02f;
k2n = 1.000000000000000e+03f;
Kmn = 2.000000000000000e-03f;
A11 = 7.868000000000000e-04f;
B11 = 1.535000000000000e-08f;
Temp = 3.700000000000000e+01f;
q11 = 4.942000000000000e+00f;
A21 = 5.455000000000000e-06f;
B21 = -1.688000000000000e-01f;
q21 = 4.156000000000000e+00f;
A51 = 4.492000000000000e-01f;
B51 = 8.595000000000000e-03f;
q51 = 5.000000000000000e+00f;
A61 = 1.241000000000000e-02f;
B61 = 1.725000000000000e-01f;
q61 = 5.568000000000000e+00f;
A3 = 1.214000000000000e-03f;
B3 = 8.515999999999999e-03f;
q3 = 4.962000000000000e+00f;
A4 = 1.854000000000000e-05f;
B4 = -4.641000000000000e-02f;
q4 = 3.769000000000000e+00f;
A52 = 3.181000000000000e-01f;
B52 = 3.613000000000000e-08f;
q52 = 4.663000000000000e+00f;
A62 = 3.226000000000000e-01f;
B62 = -6.575000000000000e-04f;
q62 = 5.000000000000000e+00f;
A1 = 2.640000000000000e-02f;
B1 = 4.631000000000000e-05f;
q1 = 4.843000000000000e+00f;
A2 = 4.986000000000000e-06f;
B2 = -4.226000000000000e-03f;
q2 = 4.230000000000000e+00f;
A31 = 5.509000000000000e-03f;
B31 = 7.771000000000001e-09f;
q31 = 4.220000000000000e+00f;
A41 = 1.416000000000000e-03f;
B41 = -2.877000000000000e-02f;
q41 = 1.459000000000000e+00f;
A53 = 1.490000000000000e-01f;
B53 = 4.668000000000000e-03f;
q53 = 2.412000000000000e+00f;
A63 = 8.978000000000000e-03f;
B63 = -2.215000000000000e-02f;
q63 = 5.682000000000000e+00f;
Kmax = 0.000000000000000e+00f;
Ku = 0.000000000000000e+00f;
n = 1.000000000000000e+00f;
halfmax = 1.000000000000000e+00f;
Kt = 0.000000000000000e+00f;
Vhalf = 1.000000000000000e+00f;
GKr_b = 4.658545454545456e-02f;
txs1_max = 8.173000000000000e+02f;
GKs_b = 6.358000000000001e-03f;
GK1_b = 3.239783999999998e-01f;
qca = 1.670000000000000e-01f;
qna = 5.224000000000000e-01f;
kna3 = 8.812000000000000e+01f;
kna1 = 1.500000000000000e+01f;
kna2 = 5.000000000000000e+00f;
kasymm = 1.250000000000000e+01f;
cao = 1.800000000000000e+00f;
kcaon = 1.500000000000000e+06f;
kcaoff = 5.000000000000000e+03f;
wca = 6.000000000000000e+04f;
wnaca = 5.000000000000000e+03f;
wna = 6.000000000000000e+04f;
KmCaAct = 1.500000000000000e-04f;
Gncx_b = 8.000000000000000e-04f;
zna = 1.000000000000000e+00f;
zca = 2.000000000000000e+00f;
Knai0 = 9.073000000000000e+00f;
delta = -1.550000000000000e-01f;
Knao0 = 2.778000000000000e+01f;
eP = 4.200000000000000e+00f;
H = 1.000000000000000e-07f;
Khp = 1.698000000000000e-07f;
Knap = 2.240000000000000e+02f;
Kxkur = 2.920000000000000e+02f;
k1p = 9.495000000000000e+02f;
Kki = 5.000000000000000e-01f;
k1m = 1.824000000000000e+02f;
MgADP = 5.000000000000000e-02f;
k2p = 6.872000000000000e+02f;
k2m = 3.940000000000000e+01f;
Kko = 3.582000000000000e-01f;
k3p = 1.899000000000000e+03f;
k3m = 7.930000000000000e+04f;
MgATP = 9.800000000000001e+00f;
Kmgatp = 1.698000000000000e-07f;
k4p = 6.390000000000000e+02f;
k4m = 4.000000000000000e+01f;
Pnak_b = 3.000000000000000e+01f;
zk = 1.000000000000000e+00f;
GKb_b = 3.000000000000000e-03f;
PNab = 3.750000000000000e-10f;
PCab = 2.500000000000000e-08f;
GpCa = 5.000000000000000e-04f;
KmCap = 5.000000000000000e-04f;
bt = 4.750000000000000e+00f;
Jrel_scaling_factor = 1.000000000000000e+00f;
Jup_b = 1.000000000000000e+00f;

vcell = (1.000000000000000e+03*3.140000000000000e+00*rad*rad*L)
Ageo = ((2.000000000000000e+00*3.140000000000000e+00*rad*rad)+(2.000000000000000e+00*3.140000000000000e+00*rad*L))
Istim = 0.0;
if(((time_new>=i_Stim_Start) and (time_new<=i_Stim_End) and (((time_new-i_Stim_Start)-(floor(((time_new-i_Stim_Start)/i_Stim_Period))*i_Stim_Period))<=i_Stim_PulseDuration))) {
    Istim = i_Stim_Amplitude
} else {
    Istim = 0.000000000000000e+00
}

frt = (F/(R*T))
CaMKb = ((CaMKo*(1.000000000000000e+00-CaMKt))/(1.000000000000000e+00+(KmCaM/cass)))
cmdnmax = 0.0;
if((celltype==1.000000000000000e+00)) {
    cmdnmax = (cmdnmax_b*1.300000000000000e+00)
} else {
    cmdnmax = cmdnmax_b
}

Bcass = (1.000000000000000e+00/(1.000000000000000e+00+((BSRmax*KmBSR)/pow((KmBSR+cass),2.000000000000000e+00))+((BSLmax*KmBSL)/pow((KmBSL+cass),2.000000000000000e+00))))
Bcajsr = (1.000000000000000e+00/(1.000000000000000e+00+((csqnmax*kmcsqn)/pow((kmcsqn+cajsr),2.000000000000000e+00))))
ENa = (((R*T)/F)*log((nao/nai)))
EK = (((R*T)/F)*log((ko/ki)))
EKs = (((R*T)/F)*log(((ko+(PKNa*nao))/(ki+(PKNa*nai)))))
mss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v+mssV1))/mssV2))))
tm = (1.000000000000000e+00/((mtD1*exp(((v+mtV1)/mtV2)))+(mtD2*exp(((-(v+mtV3))/mtV4)))))
hss = (1.000000000000000e+00/(1.000000000000000e+00+exp((((v+hssV1)-shift_INa_inact)/hssV2))))
thf = (1.000000000000000e+00/((1.432000e-05*exp(((-((v+1.196000000000000e+00)-shift_INa_inact))/6.285000000000000e+00)))+(6.149000000000000e+00*exp((((v+5.096000000000001e-01)-shift_INa_inact)/2.027000000000000e+01)))))
ths = (1.000000000000000e+00/((9.794000000000001e-03*exp(((-((v+1.795000000000000e+01)-shift_INa_inact))/2.805000000000000e+01)))+(3.343000000000000e-01*exp((((v+5.730000000000000e+00)-shift_INa_inact)/5.666000000000000e+01)))))
Ahs = (1.000000000000000e+00-Ahf)
tj = (2.038000000000000e+00+(1.000000000000000e+00/((2.136000000000000e-02*exp(((-((v+1.006000000000000e+02)-shift_INa_inact))/8.281000000000001e+00)))+(3.052000000000000e-01*exp((((v+9.941000000000000e-01)-shift_INa_inact)/3.845000000000000e+01))))))
hssp = (1.000000000000000e+00/(1.000000000000000e+00+exp((((v+8.909999999999999e+01)-shift_INa_inact)/6.086000000000000e+00))))
mLss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v+4.285000000000000e+01))/5.264000000000000e+00))))
hLss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((v+8.761000000000000e+01)/7.488000000000000e+00))))
hLssp = (1.000000000000000e+00/(1.000000000000000e+00+exp(((v+9.381000000000000e+01)/7.488000000000000e+00))))
thLp = (3.000000000000000e+00*thL)
GNaL = 0.0;
if((celltype==1.000000000000000e+00)) {
    GNaL = (GNaL_b*6.000000000000000e-01)
} else {
    GNaL = GNaL_b
}

ass = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v-1.434000000000000e+01))/1.482000000000000e+01))))
ta = (1.051500000000000e+00/((1.000000000000000e+00/(1.208900000000000e+00*(1.000000000000000e+00+exp(((-(v-1.840990000000000e+01))/2.938140000000000e+01)))))+(3.500000000000000e+00/(1.000000000000000e+00+exp(((v+1.000000000000000e+02)/2.938140000000000e+01))))))
iss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((v+4.394000000000000e+01)/5.711000000000000e+00))))
delta_epi = 0.0;
if((celltype==1.000000000000000e+00)) {
    delta_epi = (1.000000000000000e+00-(9.500000000000000e-01/(1.000000000000000e+00+exp(((v+7.000000000000000e+01)/5.000000000000000e+00)))))
} else {
    delta_epi = 1.000000000000000e+00
}

tiF_b = (4.562000000000000e+00+(1.000000000000000e+00/((3.933000000000000e-01*exp(((-(v+1.000000000000000e+02))/1.000000000000000e+02)))+(8.004000000000000e-02*exp(((v+5.000000000000000e+01)/1.659000000000000e+01))))))
tiS_b = (2.362000000000000e+01+(1.000000000000000e+00/((1.416000000000000e-03*exp(((-(v+9.652000000000000e+01))/5.905000000000000e+01)))+(1.780000e-08*exp(((v+1.141000000000000e+02)/8.079000000000001e+00))))))
AiF = (1.000000000000000e+00/(1.000000000000000e+00+exp(((v-2.136000000000000e+02)/1.512000000000000e+02))))
assp = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v-2.434000000000000e+01))/1.482000000000000e+01))))
dti_develop = (1.354000000000000e+00+(1.000000e-04/(exp(((v-1.674000000000000e+02)/1.589000000000000e+01))+exp(((-(v-1.223000000000000e+01))/2.154000000000000e-01)))))
dti_recover = (1.000000000000000e+00-(5.000000000000000e-01/(1.000000000000000e+00+exp(((v+7.000000000000000e+01)/2.000000000000000e+01)))))
Gto = 0.0;
if((celltype==1.000000000000000e+00)) {
    Gto = (Gto_b*4.000000000000000e+00)
} elif((celltype==2.000000000000000e+00)) {
        Gto = (Gto_b*4.000000000000000e+00)
} else {
    Gto = Gto_b
}

dss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v+3.940000000000000e+00))/4.230000000000000e+00))))
td = (6.000000000000000e-01+(1.000000000000000e+00/(exp(((-5.000000000000000e-02)*(v+6.000000000000000e+00)))+exp((9.000000000000000e-02*(v+1.400000000000000e+01))))))
fss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((v+1.958000000000000e+01)/3.696000000000000e+00))))
tff = (7.000000000000000e+00+(1.000000000000000e+00/((4.500000000000000e-03*exp(((-(v+2.000000000000000e+01))/1.000000000000000e+01)))+(4.500000000000000e-03*exp(((v+2.000000000000000e+01)/1.000000000000000e+01))))))
tfs = (1.000000000000000e+03+(1.000000000000000e+00/((3.500000000000000e-05*exp(((-(v+5.000000000000000e+00))/4.000000000000000e+00)))+(3.500000000000000e-05*exp(((v+5.000000000000000e+00)/6.000000000000000e+00))))))
Aff = 6.000000000000000e-01
tfcaf = (7.000000000000000e+00+(1.000000000000000e+00/((4.000000000000000e-02*exp(((-(v-4.000000000000000e+00))/7.000000000000000e+00)))+(4.000000000000000e-02*exp(((v-4.000000000000000e+00)/7.000000000000000e+00))))))
tfcas = (1.000000000000000e+02+(1.000000000000000e+00/((1.200000000000000e-04*exp(((-v)/3.000000000000000e+00)))+(1.200000000000000e-04*exp((v/7.000000000000000e+00))))))
Afcaf = (3.000000000000000e-01+(6.000000000000000e-01/(1.000000000000000e+00+exp(((v-1.000000000000000e+01)/1.000000000000000e+01)))))
tjca = 7.500000000000000e+01
km2n = (jca*1.000000000000000e+00)
GKr = 0.0;
if((celltype==1.000000000000000e+00)) {
    GKr = (GKr_b*1.300000000000000e+00)
} elif((celltype==2.000000000000000e+00)) {
        GKr = (GKr_b*8.000000000000000e-01)
} else {
    GKr = GKr_b
}

xs1ss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v+1.160000000000000e+01))/8.932000000000000e+00))))
txs1 = (txs1_max+(1.000000000000000e+00/((2.326000e-04*exp(((v+4.828000000000000e+01)/1.780000000000000e+01)))+(1.292000000000000e-03*exp(((-(v+2.100000000000000e+02))/2.300000000000000e+02))))))
txs2 = (1.000000000000000e+00/((1.000000000000000e-02*exp(((v-5.000000000000000e+01)/2.000000000000000e+01)))+(1.930000000000000e-02*exp(((-(v+6.654000000000001e+01))/3.100000000000000e+01)))))
KsCa = (1.000000000000000e+00+(6.000000000000000e-01/(1.000000000000000e+00+pow((3.800000e-05/cai),1.400000000000000e+00))))
GKs = 0.0;
if((celltype==1.000000000000000e+00)) {
    GKs = (GKs_b*1.400000000000000e+00)
} else {
    GKs = GKs_b
}

xk1ss = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v+(2.553800000000000e+00*ko)+1.445900000000000e+02))/((1.569200000000000e+00*ko)+3.811500000000000e+00)))))
txk1 = (1.222000000000000e+02/(exp(((-(v+1.272000000000000e+02))/2.036000000000000e+01))+exp(((v+2.368000000000000e+02)/6.933000000000000e+01))))
rk1 = (1.000000000000000e+00/(1.000000000000000e+00+exp((((v+1.058000000000000e+02)-(2.600000000000000e+00*ko))/9.493000000000000e+00))))
GK1 = 0.0;
if((celltype==1.000000000000000e+00)) {
    GK1 = (GK1_b*1.200000000000000e+00)
} elif((celltype==2.000000000000000e+00)) {
        GK1 = (GK1_b*1.300000000000000e+00)
} else {
    GK1 = GK1_b
}

hca = exp(((qca*v*F)/(R*T)))
hna = exp(((qna*v*F)/(R*T)))
h4_i = (1.000000000000000e+00+((nai/kna1)*(1.000000000000000e+00+(nai/kna2))))
h10_i = (kasymm+1.000000000000000e+00+((nao/kna1)*(1.000000000000000e+00+(nao/kna2))))
k2_i = kcaoff
k5_i = kcaoff
allo_i = (1.000000000000000e+00/(1.000000000000000e+00+pow((KmCaAct/cai),2.000000000000000e+00)))
Gncx = 0.0;
if((celltype==1.000000000000000e+00)) {
    Gncx = (Gncx_b*1.100000000000000e+00)
} elif((celltype==2.000000000000000e+00)) {
        Gncx = (Gncx_b*1.400000000000000e+00)
} else {
    Gncx = Gncx_b
}

h4_ss = (1.000000000000000e+00+((nass/kna1)*(1.000000000000000e+00+(nass/kna2))))
h10_ss = (kasymm+1.000000000000000e+00+((nao/kna1)*(1.000000000000000e+00+(nao/kna2))))
k2_ss = kcaoff
k5_ss = kcaoff
allo_ss = (1.000000000000000e+00/(1.000000000000000e+00+pow((KmCaAct/cass),2.000000000000000e+00)))
Knai = (Knai0*exp(((delta*v*F)/(3.000000000000000e+00*R*T))))
Knao = (Knao0*exp((((1.000000000000000e+00-delta)*v*F)/(3.000000000000000e+00*R*T))))
P = (eP/(1.000000000000000e+00+(H/Khp)+(nai/Knap)+(ki/Kxkur)))
b1 = (k1m*MgADP)
a2 = k2p
a4 = (((k4p*MgATP)/Kmgatp)/(1.000000000000000e+00+(MgATP/Kmgatp)))
Pnak = 0.0;
if((celltype==1.000000000000000e+00)) {
    Pnak = (Pnak_b*9.000000000000000e-01)
} elif((celltype==2.000000000000000e+00)) {
        Pnak = (Pnak_b*7.000000000000000e-01)
} else {
    Pnak = Pnak_b
}

xkb = (1.000000000000000e+00/(1.000000000000000e+00+exp(((-(v-1.448000000000000e+01))/1.834000000000000e+01))))
GKb = 0.0;
if((celltype==1.000000000000000e+00)) {
    GKb = (GKb_b*6.000000000000000e-01)
} else {
    GKb = GKb_b
}

v0 = 0.000000000000000e+00
v0_duplicated_ICab = 0.000000000000000e+00
IpCa = ((GpCa*cai)/(KmCap+cai))
JdiffNa = ((nass-nai)/2.000000000000000e+00)
JdiffK = ((kss-ki)/2.000000000000000e+00)
Jdiff = ((cass-cai)/2.000000000000000e-01)
a_rel = (5.000000000000000e-01*bt)
tau_rel_temp = (bt/(1.000000000000000e+00+(1.230000000000000e-02/cajsr)))
btp = (1.250000000000000e+00*bt)
upScale = 0.0;
if((celltype==1.000000000000000e+00)) {
    upScale = 1.300000000000000e+00
} else {
    upScale = 1.000000000000000e+00
}

Jleak = ((3.937500000000000e-03*cansr)/1.500000000000000e+01)
Jtr = ((cansr-cajsr)/1.000000000000000e+02)
Acap = (2.000000000000000e+00*Ageo)
vmyo = (6.800000000000000e-01*vcell)
vnsr = (5.520000000000000e-02*vcell)
vjsr = (4.800000000000000e-03*vcell)
vss = (2.000000000000000e-02*vcell)
ffrt = (F*frt)
vfrt = (v*frt)
CaMKa = (CaMKb+CaMKt)
Bcai = (1.000000000000000e+00/(1.000000000000000e+00+((cmdnmax*kmcmdn)/pow((kmcmdn+cai),2.000000000000000e+00))+((trpnmax*kmtrpn)/pow((kmtrpn+cai),2.000000000000000e+00))))
h = ((Ahf*hf)+(Ahs*hs))
jss = hss
thsp = (3.000000000000000e+00*ths)
hp = ((Ahf*hf)+(Ahs*hsp))
tjp = (1.460000000000000e+00*tj)
tmL = tm
tiF = (tiF_b*delta_epi)
tiS = (tiS_b*delta_epi)
AiS = (1.000000000000000e+00-AiF)
Afs = (1.000000000000000e+00-Aff)
fcass = fss
Afcas = (1.000000000000000e+00-Afcaf)
tffp = (2.500000000000000e+00*tff)
tfcafp = (2.500000000000000e+00*tfcaf)
anca = (1.000000000000000e+00/((k2n/km2n)+pow((1.000000000000000e+00+(Kmn/cass)),4.000000000000000e+00)))
IKr = (GKr*pow((ko/5.400000000000000e+00),1.0/2.0)*O*(v-EK))
xs2ss = xs1ss
IKs = (GKs*KsCa*xs1*xs2*(v-EKs))
IK1 = (GK1*pow(ko,1.0/2.0)*rk1*xk1*(v-EK))
h1_i = (1.000000000000000e+00+((nai/kna3)*(1.000000000000000e+00+hna)))
h5_i = ((nai*nai)/(h4_i*kna1*kna2))
h6_i = (1.000000000000000e+00/h4_i)
h7_i = (1.000000000000000e+00+((nao/kna3)*(1.000000000000000e+00+(1.000000000000000e+00/hna))))
h11_i = ((nao*nao)/(h10_i*kna1*kna2))
h12_i = (1.000000000000000e+00/h10_i)
h1_ss = (1.000000000000000e+00+((nass/kna3)*(1.000000000000000e+00+hna)))
h5_ss = ((nass*nass)/(h4_ss*kna1*kna2))
h6_ss = (1.000000000000000e+00/h4_ss)
h7_ss = (1.000000000000000e+00+((nao/kna3)*(1.000000000000000e+00+(1.000000000000000e+00/hna))))
h11_ss = ((nao*nao)/(h10_ss*kna1*kna2))
h12_ss = (1.000000000000000e+00/h10_ss)
a1 = ((k1p*pow((nai/Knai),3.000000000000000e+00))/((pow((1.000000000000000e+00+(nai/Knai)),3.000000000000000e+00)+pow((1.000000000000000e+00+(ki/Kki)),2.000000000000000e+00))-1.000000000000000e+00))
b2 = ((k2m*pow((nao/Knao),3.000000000000000e+00))/((pow((1.000000000000000e+00+(nao/Knao)),3.000000000000000e+00)+pow((1.000000000000000e+00+(ko/Kko)),2.000000000000000e+00))-1.000000000000000e+00))
a3 = ((k3p*pow((ko/Kko),2.000000000000000e+00))/((pow((1.000000000000000e+00+(nao/Knao)),3.000000000000000e+00)+pow((1.000000000000000e+00+(ko/Kko)),2.000000000000000e+00))-1.000000000000000e+00))
b3 = ((k3m*P*H)/(1.000000000000000e+00+(MgATP/Kmgatp)))
b4 = ((k4m*pow((ki/Kki),2.000000000000000e+00))/((pow((1.000000000000000e+00+(nai/Knai)),3.000000000000000e+00)+pow((1.000000000000000e+00+(ki/Kki)),2.000000000000000e+00))-1.000000000000000e+00))
IKb = (GKb*xkb*(v-EK))
B = frt
B_duplicated_ICab = (2.000000000000000e+00*frt)
Jrel_inf_temp = ((a_rel*(-ICaL))/(1.000000000000000e+00+(1.000000000000000e+00*pow((1.500000000000000e+00/cajsr),8.000000000000000e+00))))
tau_rel = 0.0;
if((tau_rel_temp<1.000000000000000e-03)) {
    tau_rel = 1.000000000000000e-03
} else {
    tau_rel = tau_rel_temp
}

a_relp = (5.000000000000000e-01*btp)
tau_relp_temp = (btp/(1.000000000000000e+00+(1.230000000000000e-02/cajsr)))
Jupnp = ((upScale*4.375000000000000e-03*cai)/(cai+9.200000000000000e-04))
Jupp = ((upScale*2.750000000000000e+00*4.375000000000000e-03*cai)/((cai+9.200000000000000e-04)-1.700000000000000e-04))
fINap = (1.000000000000000e+00/(1.000000000000000e+00+(KmCaMK/CaMKa)))
fINaLp = (1.000000000000000e+00/(1.000000000000000e+00+(KmCaMK/CaMKa)))
i = ((AiF*iF)+(AiS*iS))
tiFp = (dti_develop*dti_recover*tiF)
tiSp = (dti_develop*dti_recover*tiS)
ip = ((AiF*iFp)+(AiS*iSp))
fItop = (1.000000000000000e+00/(1.000000000000000e+00+(KmCaMK/CaMKa)))
f = ((Aff*ff)+(Afs*fs))
fca = ((Afcaf*fcaf)+(Afcas*fcas))
fp = ((Aff*ffp)+(Afs*fs))
fcap = ((Afcaf*fcafp)+(Afcas*fcas))
h2_i = ((nai*hna)/(kna3*h1_i))
h3_i = (1.000000000000000e+00/h1_i)
h8_i = (nao/(kna3*hna*h7_i))
h9_i = (1.000000000000000e+00/h7_i)
k1_i = (h12_i*cao*kcaon)
k6_i = (h6_i*cai*kcaon)
h2_ss = ((nass*hna)/(kna3*h1_ss))
h3_ss = (1.000000000000000e+00/h1_ss)
h8_ss = (nao/(kna3*hna*h7_ss))
h9_ss = (1.000000000000000e+00/h7_ss)
k1_ss = (h12_ss*cao*kcaon)
k6_ss = (h6_ss*cass*kcaon)
x1 = ((a4*a1*a2)+(b2*b4*b3)+(a2*b4*b3)+(b3*a1*a2))
x2 = ((b2*b1*b4)+(a1*a2*a3)+(a3*b1*b4)+(a2*a3*b4))
x3 = ((a2*a3*a4)+(b3*b2*b1)+(b2*b1*a4)+(a3*a4*b1))
x4 = ((b4*b3*b2)+(a3*a4*a1)+(b2*a4*a1)+(b3*b2*a1))
A = ((PNab*ffrt*((nai*exp(vfrt))-nao))/B)
U = (B*(v-v0))
A_duplicated_ICab = ((PCab*4.000000000000000e+00*ffrt*((cai*exp((2.000000000000000e+00*vfrt)))-(3.410000000000000e-01*cao)))/B_duplicated_ICab)
U_duplicated_ICab = (B_duplicated_ICab*(v-v0_duplicated_ICab))
Jrel_inf = 0.0;
if((celltype==2.000000000000000e+00)) {
    Jrel_inf = (Jrel_inf_temp*1.700000000000000e+00)
} else {
    Jrel_inf = Jrel_inf_temp
}

Jrel_temp = ((a_relp*(-ICaL))/(1.000000000000000e+00+pow((1.500000000000000e+00/cajsr),8.000000000000000e+00)))
tau_relp = 0.0;
if((tau_relp_temp<1.000000000000000e-03)) {
    tau_relp = 1.000000000000000e-03
} else {
    tau_relp = tau_relp_temp
}

fJrelp = (1.000000000000000e+00/(1.000000000000000e+00+(KmCaMK/CaMKa)))
fJupp = (1.000000000000000e+00/(1.000000000000000e+00+(KmCaMK/CaMKa)))
INa = (GNa*(v-ENa)*pow(m,3.000000000000000e+00)*(((1.000000000000000e+00-fINap)*h*j)+(fINap*hp*jp)))
INaL = (GNaL*(v-ENa)*mL*(((1.000000000000000e+00-fINaLp)*hL)+(fINaLp*hLp)))
Ito = (Gto*(v-EK)*(((1.000000000000000e+00-fItop)*a*i)+(fItop*ap*ip)))
k3p_i = (h9_i*wca)
k3pp_i = (h8_i*wnaca)
k4p_i = ((h3_i*wca)/hca)
k4pp_i = (h2_i*wnaca)
k7_i = (h5_i*h2_i*wna)
k8_i = (h8_i*h11_i*wna)
k3p_ss = (h9_ss*wca)
k3pp_ss = (h8_ss*wnaca)
k4p_ss = ((h3_ss*wca)/hca)
k4pp_ss = (h2_ss*wnaca)
k7_ss = (h5_ss*h2_ss*wna)
k8_ss = (h8_ss*h11_ss*wna)
E1 = (x1/(x1+x2+x3+x4))
E2 = (x2/(x1+x2+x3+x4))
E3 = (x3/(x1+x2+x3+x4))
E4 = (x4/(x1+x2+x3+x4))
INab = 0.0;
if((((-1.000000e-07)<=U) and (U<=1.000000e-07))) {
    INab = (A*(1.000000000000000e+00-(5.000000000000000e-01*U)))
} else {
    INab = ((A*U)/(exp(U)-1.000000000000000e+00))
}

ICab = 0.0;
if((((-1.000000e-07)<=U) and (U<=1.000000e-07))) {
    ICab = (A*(1.000000000000000e+00-(5.000000000000000e-01*U)))
} else {
    ICab = ((A*U)/(exp(U)-1.000000000000000e+00))
}

Jrel_infp = 0.0;
if((celltype==2.000000000000000e+00)) {
    Jrel_infp = (Jrel_temp*1.700000000000000e+00)
} else {
    Jrel_infp = Jrel_temp
}

Jrel = (Jrel_scaling_factor*(((1.000000000000000e+00-fJrelp)*Jrelnp)+(fJrelp*Jrelp)))
Jup = (Jup_b*((((1.000000000000000e+00-fJupp)*Jupnp)+(fJupp*Jupp))-Jleak))
k3_i = (k3p_i+k3pp_i)
k4_i = (k4p_i+k4pp_i)
k3_ss = (k3p_ss+k3pp_ss)
k4_ss = (k4p_ss+k4pp_ss)
JnakNa = (3.000000000000000e+00*((E1*a3)-(E2*b3)))
JnakK = (2.000000000000000e+00*((E4*b1)-(E3*a1)))
x1_i = ((k2_i*k4_i*(k7_i+k6_i))+(k5_i*k7_i*(k2_i+k3_i)))
x2_i = ((k1_i*k7_i*(k4_i+k5_i))+(k4_i*k6_i*(k1_i+k8_i)))
x3_i = ((k1_i*k3_i*(k7_i+k6_i))+(k8_i*k6_i*(k2_i+k3_i)))
x4_i = ((k2_i*k8_i*(k4_i+k5_i))+(k3_i*k5_i*(k1_i+k8_i)))
x1_ss = ((k2_ss*k4_ss*(k7_ss+k6_ss))+(k5_ss*k7_ss*(k2_ss+k3_ss)))
x2_ss = ((k1_ss*k7_ss*(k4_ss+k5_ss))+(k4_ss*k6_ss*(k1_ss+k8_ss)))
x3_ss = ((k1_ss*k3_ss*(k7_ss+k6_ss))+(k8_ss*k6_ss*(k2_ss+k3_ss)))
x4_ss = ((k2_ss*k8_ss*(k4_ss+k5_ss))+(k3_ss*k5_ss*(k1_ss+k8_ss)))
INaK = (Pnak*((zna*JnakNa)+(zk*JnakK)))
E1_i = (x1_i/(x1_i+x2_i+x3_i+x4_i))
E2_i = (x2_i/(x1_i+x2_i+x3_i+x4_i))
E3_i = (x3_i/(x1_i+x2_i+x3_i+x4_i))
E4_i = (x4_i/(x1_i+x2_i+x3_i+x4_i))
E1_ss = (x1_ss/(x1_ss+x2_ss+x3_ss+x4_ss))
E2_ss = (x2_ss/(x1_ss+x2_ss+x3_ss+x4_ss))
E3_ss = (x3_ss/(x1_ss+x2_ss+x3_ss+x4_ss))
E4_ss = (x4_ss/(x1_ss+x2_ss+x3_ss+x4_ss))
JncxNa_i = (((3.000000000000000e+00*((E4_i*k7_i)-(E1_i*k8_i)))+(E3_i*k4pp_i))-(E2_i*k3pp_i))
JncxCa_i = ((E2_i*k2_i)-(E1_i*k1_i))
JncxNa_ss = (((3.000000000000000e+00*((E4_ss*k7_ss)-(E1_ss*k8_ss)))+(E3_ss*k4pp_ss))-(E2_ss*k3pp_ss))
JncxCa_ss = ((E2_ss*k2_ss)-(E1_ss*k1_ss))
INaCa_i = (8.000000000000000e-01*Gncx*allo_i*((zna*JncxNa_i)+(zca*JncxCa_i)))
INaCa_ss = (2.000000000000000e-01*Gncx*allo_ss*((zna*JncxNa_ss)+(zca*JncxCa_ss)))

ode v' = (-(INa+INaL+Ito+ICaL+ICaNa+ICaK+IKr+IKs+IK1+INaCa_i+INaCa_ss+INaK+INab+IKb+IpCa+ICab+Istim))
ode CaMKt' = ((aCaMK*CaMKb*(CaMKb+CaMKt))-(bCaMK*CaMKt))
ode nai' = ((((-(INa+INaL+(3.000000000000000e+00*INaCa_i)+(3.000000000000000e+00*INaK)+INab))*Acap*cm)/(F*vmyo))+((JdiffNa*vss)/vmyo))
ode nass' = ((((-(ICaNa+(3.000000000000000e+00*INaCa_ss)))*cm*Acap)/(F*vss))-JdiffNa)
ode ki' = ((((-((Ito+IKr+IKs+IK1+IKb+Istim)-(2.000000000000000e+00*INaK)))*cm*Acap)/(F*vmyo))+((JdiffK*vss)/vmyo))
ode kss' = ((((-ICaK)*cm*Acap)/(F*vss))-JdiffK)
ode cai' = (Bcai*(((((-((IpCa+ICab)-(2.000000000000000e+00*INaCa_i)))*cm*Acap)/(2.000000000000000e+00*F*vmyo))-((Jup*vnsr)/vmyo))+((Jdiff*vss)/vmyo)))
ode cass' = (Bcass*(((((-(ICaL-(2.000000000000000e+00*INaCa_ss)))*cm*Acap)/(2.000000000000000e+00*F*vss))+((Jrel*vjsr)/vss))-Jdiff))
ode cansr' = (Jup-((Jtr*vjsr)/vnsr))
ode cajsr' = (Bcajsr*(Jtr-Jrel))
ode m' = ((mss-m)/tm)
ode hf' = ((hss-hf)/thf)
ode hs' = ((hss-hs)/ths)
ode j' = ((jss-j)/tj)
ode hsp' = ((hssp-hsp)/thsp)
ode jp' = ((jss-jp)/tjp)
ode mL' = ((mLss-mL)/tmL)
ode hL' = ((hLss-hL)/thL)
ode hLp' = ((hLssp-hLp)/thLp)
ode a' = ((ass-a)/ta)
ode iF' = ((iss-iF)/tiF)
ode iS' = ((iss-iS)/tiS)
ode ap' = ((assp-ap)/ta)
ode iFp' = ((iss-iFp)/tiFp)
ode iSp' = ((iss-iSp)/tiSp)
ode d' = ((dss-d)/td)
ode ff' = ((fss-ff)/tff)
ode fs' = ((fss-fs)/tfs)
ode fcaf' = ((fcass-fcaf)/tfcaf)
ode fcas' = ((fcass-fcas)/tfcas)
ode jca' = ((fcass-jca)/tjca)
ode ffp' = ((fss-ffp)/tffp)
ode fcafp' = ((fcass-fcafp)/tfcafp)
ode nca' = ((anca*k2n)-(nca*km2n))
ode IC1' = (((-((A11*exp((B11*v))*IC1*exp((((Temp-2.000000000000000e+01)*log(q11))/1.000000000000000e+01)))-(A21*exp((B21*v))*IC2*exp((((Temp-2.000000000000000e+01)*log(q21))/1.000000000000000e+01)))))+(A51*exp((B51*v))*C1*exp((((Temp-2.000000000000000e+01)*log(q51))/1.000000000000000e+01))))-(A61*exp((B61*v))*IC1*exp((((Temp-2.000000000000000e+01)*log(q61))/1.000000000000000e+01))))
ode IC2' = (((((A11*exp((B11*v))*IC1*exp((((Temp-2.000000000000000e+01)*log(q11))/1.000000000000000e+01)))-(A21*exp((B21*v))*IC2*exp((((Temp-2.000000000000000e+01)*log(q21))/1.000000000000000e+01))))-((A3*exp((B3*v))*IC2*exp((((Temp-2.000000000000000e+01)*log(q3))/1.000000000000000e+01)))-(A4*exp((B4*v))*IO*exp((((Temp-2.000000000000000e+01)*log(q4))/1.000000000000000e+01)))))+(A52*exp((B52*v))*C2*exp((((Temp-2.000000000000000e+01)*log(q52))/1.000000000000000e+01))))-(A62*exp((B62*v))*IC2*exp((((Temp-2.000000000000000e+01)*log(q62))/1.000000000000000e+01))))
ode C1' = ((-((A1*exp((B1*v))*C1*exp((((Temp-2.000000000000000e+01)*log(q1))/1.000000000000000e+01)))-(A2*exp((B2*v))*C2*exp((((Temp-2.000000000000000e+01)*log(q2))/1.000000000000000e+01)))))-((A51*exp((B51*v))*C1*exp((((Temp-2.000000000000000e+01)*log(q51))/1.000000000000000e+01)))-(A61*exp((B61*v))*IC1*exp((((Temp-2.000000000000000e+01)*log(q61))/1.000000000000000e+01)))))
ode C2' = ((((A1*exp((B1*v))*C1*exp((((Temp-2.000000000000000e+01)*log(q1))/1.000000000000000e+01)))-(A2*exp((B2*v))*C2*exp((((Temp-2.000000000000000e+01)*log(q2))/1.000000000000000e+01))))-((A31*exp((B31*v))*C2*exp((((Temp-2.000000000000000e+01)*log(q31))/1.000000000000000e+01)))-(A41*exp((B41*v))*O*exp((((Temp-2.000000000000000e+01)*log(q41))/1.000000000000000e+01)))))-((A52*exp((B52*v))*C2*exp((((Temp-2.000000000000000e+01)*log(q52))/1.000000000000000e+01)))-(A62*exp((B62*v))*IC2*exp((((Temp-2.000000000000000e+01)*log(q62))/1.000000000000000e+01)))))
ode O' = ((((A31*exp((B31*v))*C2*exp((((Temp-2.000000000000000e+01)*log(q31))/1.000000000000000e+01)))-(A41*exp((B41*v))*O*exp((((Temp-2.000000000000000e+01)*log(q41))/1.000000000000000e+01))))-((A53*exp((B53*v))*O*exp((((Temp-2.000000000000000e+01)*log(q53))/1.000000000000000e+01)))-(A63*exp((B63*v))*IO*exp((((Temp-2.000000000000000e+01)*log(q63))/1.000000000000000e+01)))))-((((Kmax*Ku*exp((n*log(D))))/(exp((n*log(D)))+halfmax))*O)-(Ku*Obound)))
ode IO' = (((((A3*exp((B3*v))*IC2*exp((((Temp-2.000000000000000e+01)*log(q3))/1.000000000000000e+01)))-(A4*exp((B4*v))*IO*exp((((Temp-2.000000000000000e+01)*log(q4))/1.000000000000000e+01))))+(A53*exp((B53*v))*O*exp((((Temp-2.000000000000000e+01)*log(q53))/1.000000000000000e+01))))-(A63*exp((B63*v))*IO*exp((((Temp-2.000000000000000e+01)*log(q63))/1.000000000000000e+01))))-((((Kmax*Ku*exp((n*log(D))))/(exp((n*log(D)))+halfmax))*IO)-(((Ku*A53*exp((B53*v))*exp((((Temp-2.000000000000000e+01)*log(q53))/1.000000000000000e+01)))/(A63*exp((B63*v))*exp((((Temp-2.000000000000000e+01)*log(q63))/1.000000000000000e+01))))*IObound)))
ode IObound' = ((((((Kmax*Ku*exp((n*log(D))))/(exp((n*log(D)))+halfmax))*IO)-(((Ku*A53*exp((B53*v))*exp((((Temp-2.000000000000000e+01)*log(q53))/1.000000000000000e+01)))/(A63*exp((B63*v))*exp((((Temp-2.000000000000000e+01)*log(q63))/1.000000000000000e+01))))*IObound))+((Kt/(1.000000000000000e+00+exp(((-(v-Vhalf))/6.789000000000000e+00))))*Cbound))-(Kt*IObound))
ode Obound' = ((((((Kmax*Ku*exp((n*log(D))))/(exp((n*log(D)))+halfmax))*O)-(Ku*Obound))+((Kt/(1.000000000000000e+00+exp(((-(v-Vhalf))/6.789000000000000e+00))))*Cbound))-(Kt*Obound))
ode Cbound' = ((-(((Kt/(1.000000000000000e+00+exp(((-(v-Vhalf))/6.789000000000000e+00))))*Cbound)-(Kt*Obound)))-(((Kt/(1.000000000000000e+00+exp(((-(v-Vhalf))/6.789000000000000e+00))))*Cbound)-(Kt*IObound)))
ode D' = 0.000000000000000e+00
ode xs1' = ((xs1ss-xs1)/txs1)
ode xs2' = ((xs2ss-xs2)/txs2)
ode xk1' = ((xk1ss-xk1)/txk1)
ode Jrelnp' = ((Jrel_inf-Jrelnp)/tau_rel)
ode Jrelp' = ((Jrel_infp-Jrelp)/tau_relp)

#initial conditions
initial v = -8.800190e+01
initial CaMKt = 1.258404e-02
initial nai = 7.268004e+00
initial nass = 7.268090e+00
initial ki = 1.446556e+02
initial kss = 1.446556e+02
initial cai = 8.600000e-05
initial cass = 8.490000e-05
initial cansr = 1.619575e+00
initial cajsr = 1.571234e+00
initial m = 7.344121e-03
initial hf = 6.981072e-01
initial hs = 6.980896e-01
initial j = 6.979908e-01
initial hsp = 4.549486e-01
initial jp = 6.979246e-01
initial mL = 1.882617e-04
initial hL = 5.008549e-01
initial hLp = 2.693065e-01
initial a = 1.001098e-03
initial iF = 9.995542e-01
initial iS = 5.865062e-01
initial ap = 5.100863e-04
initial iFp = 9.995542e-01
initial iSp = 6.393399e-01
initial d = 2.340000e-09
initial ff = 1.000000e+00
initial fs = 9.102413e-01
initial fcaf = 1.000000e+00
initial fcas = 9.998047e-01
initial jca = 9.999738e-01
initial ffp = 1.000000e+00
initial fcafp = 1.000000e+00
initial nca = 2.749414e-03
initial IC1 = 9.996370e-01
initial IC2 = 6.832080e-05
initial C1 = 1.801450e-08
initial C2 = 8.266190e-05
initial O = 1.555100e-04
initial IO = 5.676230e-05
initial IObound = 0.000000e+00
initial Obound = 0.000000e+00
initial Cbound = 0.000000e+00
initial D = 0.000000e+00
initial xs1 = 2.707758e-01
initial xs2 = 1.928503e-04
initial xk1 = 9.967598e-01
initial Jrelnp = 2.500000e-07
initial Jrelp = 3.120000e-07